use cpc_learning_platform_server::{course_service_client::CourseServiceClient, CreateCourseRequest, Course};
use tonic::transport::Channel;

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    // Connect to the gRPC server
    let channel = Channel::from_static("http://[::1]:50051")
        .connect()
        .await?;

    // Create a course service client
    let mut client = CourseServiceClient::new(channel);

    // Create a new course
    let course = Course {
        id: String::new(), // Will be generated by the server
        title: "Rust Programming".to_string(),
        description: "Learn Rust programming language".to_string(),
        creator_id: "user-123".to_string(),
        modules: vec![], // Empty for now
    };

    let request = tonic::Request::new(CreateCourseRequest {
        course: Some(course),
    });

    // Send the request
    let response = client.create_course(request).await?;

    println!("Course created with ID: {}", response.into_inner().course_id);

    Ok(())
}