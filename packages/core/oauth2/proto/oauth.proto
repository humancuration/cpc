syntax = "proto3";

package oauth2;

// OAuth2 service definition
service OAuthService {
  // Start OAuth authentication flow
  rpc StartAuth (StartAuthRequest) returns (StartAuthResponse);
  
  // Handle OAuth callback
  rpc HandleCallback (HandleCallbackRequest) returns (HandleCallbackResponse);
  
  // Refresh OAuth token
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
  
  // Get user profile
  rpc GetProfile (GetProfileRequest) returns (GetProfileResponse);
}

// Request to start OAuth authentication
message StartAuthRequest {
  string user_id = 1;
  string provider = 2;
  optional string redirect_uri = 3;
}

// Response for starting OAuth authentication
message StartAuthResponse {
  string auth_url = 1;
  string state = 2;
}

// Request to handle OAuth callback
message HandleCallbackRequest {
  string code = 1;
  string state = 2;
}

// Response for handling OAuth callback
message HandleCallbackResponse {
  string user_id = 1;
  OAuthToken token = 2;
  OAuthProfile profile = 3;
}

// Request to refresh OAuth token
message RefreshTokenRequest {
  string user_id = 1;
  string provider = 2;
}

// Response for refreshing OAuth token
message RefreshTokenResponse {
  OAuthToken token = 1;
}

// Request to get user profile
message GetProfileRequest {
  string user_id = 1;
  string provider = 2;
}

// Response for getting user profile
message GetProfileResponse {
  OAuthProfile profile = 1;
}

// OAuth token information
message OAuthToken {
  string access_token = 1;
  optional string refresh_token = 2;
  string expires_at = 3;
  repeated string scopes = 4;
  string provider = 5;
}

// OAuth profile information
message OAuthProfile {
  string provider_id = 1;
  string name = 2;
  optional string email = 3;
  string provider = 4;
  optional string avatar_url = 5;
}